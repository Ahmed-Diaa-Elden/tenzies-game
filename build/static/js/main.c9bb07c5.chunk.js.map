{"version":3,"sources":["Die.js","App.js","index.js"],"names":["Die","props","styles","backgroundColor","isHeld","react_default","a","createElement","className","style","onClick","holdDice","value","App","_React$useState","React","useState","allNewDice","_React$useState2","Object","slicedToArray","dice","setDice","_React$useState3","_React$useState4","tenzies","setTenzies","generateNewDie","Math","ceil","random","id","nanoid","newDice","i","push","useEffect","allHeld","every","die","firstValue","allSameValue","diceElements","map","key","oldDice","objectSpread","react_confetti_min_default","ReactDOM","createRoot","document","getElementById","render"],"mappings":"uKAEe,SAASA,EAAIC,GACxB,IAAMC,EAAS,CACXC,gBAAiBF,EAAMG,OAAS,UAAY,SAEhD,OACIC,EAAAC,EAAAC,cAAA,OACIC,UAAU,WACVC,MAAOP,EACPQ,QAAST,EAAMU,UAEfN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWP,EAAMW,yCCN5B,SAASC,IAAM,IAAAC,EAEFC,IAAMC,SAASC,KAFbC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GAEnBO,EAFmBH,EAAA,GAEbI,EAFaJ,EAAA,GAAAK,EAGIR,IAAMC,UAAS,GAHnBQ,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAGnBE,EAHmBD,EAAA,GAGVE,EAHUF,EAAA,GAc1B,SAASG,IACL,MAAO,CACHf,MAAOgB,KAAKC,KAAqB,EAAhBD,KAAKE,UACtB1B,QAAQ,EACR2B,GAAIC,eAIZ,SAASf,IAEL,IADA,IAAMgB,EAAU,GACPC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAAQE,KAAKR,KAEjB,OAAOM,EAtBXlB,IAAMqB,UAAU,WACZ,IAAMC,EAAUhB,EAAKiB,MAAM,SAAAC,GAAG,OAAIA,EAAInC,SAChCoC,EAAanB,EAAK,GAAGT,MACrB6B,EAAepB,EAAKiB,MAAM,SAAAC,GAAG,OAAIA,EAAI3B,QAAU4B,IACjDH,GAAWI,GACXf,GAAW,IAEhB,CAACL,IAuCJ,IAAMqB,EAAerB,EAAKsB,IAAI,SAAAJ,GAAG,OAC7BlC,EAAAC,EAAAC,cAACP,EAAD,CACI4C,IAAKL,EAAIR,GACTnB,MAAO2B,EAAI3B,MACXR,OAAQmC,EAAInC,OACZO,SAAU,kBAbAoB,EAaeQ,EAAIR,QAZjCT,EAAQ,SAAAuB,GAAO,OAAIA,EAAQF,IAAI,SAAAJ,GAC3B,OAAOA,EAAIR,KAAOA,EAAXZ,OAAA2B,EAAA,EAAA3B,CAAA,GACCoB,EADD,CACMnC,QAASmC,EAAInC,SACtBmC,MAJZ,IAAkBR,OAiBlB,OACI1B,EAAAC,EAAAC,cAAA,YACKkB,GAAWpB,EAAAC,EAAAC,cAACwC,EAAAzC,EAAD,MACZD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,WACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,qGAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACVkC,GAELrC,EAAAC,EAAAC,cAAA,UACIC,UAAU,YACVE,QAzCZ,WACQe,GAOAC,GAAW,GACXJ,EAAQL,MAPRK,EAAQ,SAAAuB,GAAO,OAAIA,EAAQF,IAAI,SAAAJ,GAC3B,OAAOA,EAAInC,OACPmC,EACAZ,UAsCHF,EAAU,WAAa,SC3E3BuB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/C,EAAAC,EAAAC,cAACM,EAAD","file":"static/js/main.c9bb07c5.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default function Die(props) {\r\n    const styles = {\r\n        backgroundColor: props.isHeld ? \"#59E391\" : \"white\"\r\n    }\r\n    return (\r\n        <div \r\n            className=\"die-face\" \r\n            style={styles}\r\n            onClick={props.holdDice}\r\n        >\r\n            <h2 className=\"die-num\">{props.value}</h2>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport Die from \"./Die\"\r\nimport {nanoid} from \"nanoid\"\r\nimport Confetti from \"react-confetti\"\r\nimport './style.css'\r\n\r\nexport default function App() {\r\n\r\n    const [dice, setDice] = React.useState(allNewDice())\r\n    const [tenzies, setTenzies] = React.useState(false)\r\n    \r\n    React.useEffect(() => {\r\n        const allHeld = dice.every(die => die.isHeld)\r\n        const firstValue = dice[0].value\r\n        const allSameValue = dice.every(die => die.value === firstValue)\r\n        if (allHeld && allSameValue) {\r\n            setTenzies(true)\r\n        }\r\n    }, [dice])\r\n\r\n    function generateNewDie() {\r\n        return {\r\n            value: Math.ceil(Math.random() * 6),\r\n            isHeld: false,\r\n            id: nanoid()\r\n        }\r\n    }\r\n    \r\n    function allNewDice() {\r\n        const newDice = []\r\n        for (let i = 0; i < 10; i++) {\r\n            newDice.push(generateNewDie())\r\n        }\r\n        return newDice\r\n    }\r\n    \r\n    function rollDice() {\r\n        if(!tenzies) {\r\n            setDice(oldDice => oldDice.map(die => {\r\n                return die.isHeld ? \r\n                    die :\r\n                    generateNewDie()\r\n            }))\r\n        } else {\r\n            setTenzies(false)\r\n            setDice(allNewDice())\r\n        }\r\n    }\r\n    \r\n    function holdDice(id) {\r\n        setDice(oldDice => oldDice.map(die => {\r\n            return die.id === id ? \r\n                {...die, isHeld: !die.isHeld} :\r\n                die\r\n        }))\r\n    }\r\n    \r\n    const diceElements = dice.map(die => (\r\n        <Die \r\n            key={die.id} \r\n            value={die.value} \r\n            isHeld={die.isHeld} \r\n            holdDice={() => holdDice(die.id)}\r\n        />\r\n    ))\r\n    \r\n    return (\r\n        <main>\r\n            {tenzies && <Confetti />}\r\n            <h1 className=\"title\">Tenzies</h1>\r\n            <p className=\"instructions\">Roll until all dice are the same. \r\n            Click each die to freeze it at its current value between rolls.</p>\r\n            <div className=\"dice-container\">\r\n                {diceElements}\r\n            </div>\r\n            <button \r\n                className=\"roll-dice\" \r\n                onClick={rollDice}\r\n            >\r\n                {tenzies ? \"New Game\" : \"Roll\"}\r\n            </button>\r\n        </main>\r\n    )\r\n}","import React from \"react\"\r\nimport ReactDOM from \"react-dom/client\"\r\nimport App from \"./App\"\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"))\r\nroot.render(\r\n  <App />\r\n)\r\n"],"sourceRoot":""}